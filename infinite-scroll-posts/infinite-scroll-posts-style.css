/* Style sheet for Infinite Scroll Posts Blog App */
@charset "ISO-8859-1";
@import url("https://fonts.googleapis.com/css?family=Lato&display=swap"); /*Import Lato font from Google Fonts */

* {
    box-sizing: border-box;
}

:root {
    --primaryColor: #0C0032;
    --secondColor: #240090;
}

/*Navigation bar*/
.nav-bar {
    list-style-type: none;
    display: flex;
    margin: 1vw; /*vW is viewport width. */
}

.nav-bar-items { /*Class for list items (li)*/
    float: left;
    margin: 0 1vw 0 1vw;
    font-size: medium;
}

.nav-bar-items a { /*Class for list items (li) a tags*/
    color: #fff;
    font-family: "Lato", sans-serif;
}

.nav-bar-items a:hover { /*Changes behavior of a link when user hovers over it*/
    color: var(--secondColor);
    font-weight: bold;
    transition: color .3s ease;
}

/*Body*/
body {
    background-color: var(--primaryColor);
    color: #fff;
    font-family: "Lato", sans-serif;
}

/* Project Description */
.project-description {
    font-size: large;
    font-weight: bolder;
    margin: 2vh 2vw;
    justify-content: left; /*Horizontal alignment. */
    align-items: left; /*Vertical alignment. */
}

/* Infinite Scroll Posts Blog */
.app-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    margin: 0;
    padding-bottom: 100px;
}

h1 {
    margin-bottom: 0;
    text-align: center;
}

.filter-container {
    margin-top: 20px;
    width: 80vw;
    max-width: 800px;
}

.filter {
    width: 100%;
    padding: 12px;
    font-size: 16px;
}

.post {
    position: relative;
    background-color: var(--secondColor);
    box-shadow: 0 2px 4px rgba(0,0,0,0.3);
    border-radius: 3px;
    padding: 20px;
    margin: 40px 0;
    display: flex;
    width: 80vw;
    max-width: 800px;
}

.post .post-title {
    margin: 0;
}

.post .post-body {
    margin: 15px 0 0;
    line-height: 1.3;
}

.post .post-info {
    margin-left: 20px;
}

.post .number {
    position: absolute;
    top: -15px;
    left: -15px;
    font-size: 15px;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #fff;
    color: var(--primaryColor);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 7px 10px;
}

.loader {
    opacity: 0;
    display: flex;
    position: fixed;
    bottom: 50px;
    transition: opacity 0.3s ease-in;
}

.loader.show {
    opacity: 1;
}

.circle {
    background-color: #fff;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin: 5px;
    animation: bounce 0.5s ease-in infinite; /* Create animation bounce that takes 0.5s to complete and continues for infinity. */
}

.circle:nth-of-type(2) {
    animation-delay: 0.1s;
}


.circle:nth-of-type(3) {
    animation-delay: 0.2s;
}

@keyframes bounce { /* Keyframes are used to define an animation. What should happen at the start, middle, end, etc. of the animation. */
    0%, 100% { /* At 0% and 100% of time (when the animation first begins and when it ends), set Y equal to its current position (Y should be at the same position it currently is). */
        transform: translateY(0);
    }

    50% { /* At 50% of time (when the animation is half way through), move Y 10 pixels down from its current position. */
        transform: translateY(-10px);
    }
}























